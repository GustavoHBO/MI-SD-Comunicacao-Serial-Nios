|UART
button => ~NO_FANOUT~
clk => clk.IN2
reset => _.IN1
reset => _.IN1
reset => _.IN1
rx => rx.IN1
tx <= rx.DB_MAX_OUTPUT_PORT_TYPE


|UART|clk_divider:clk_divider
clk_in => clk_out~reg0.CLK
clk_in => speedCache[0].CLK
clk_in => speedCache[1].CLK
clk_in => counter_time[0].CLK
clk_in => counter_time[1].CLK
clk_in => counter_time[2].CLK
clk_in => counter_time[3].CLK
clk_in => counter_time[4].CLK
clk_in => counter_time[5].CLK
clk_in => counter_time[6].CLK
clk_in => counter_time[7].CLK
clk_in => counter_time[8].CLK
clk_in => counter_time[9].CLK
clk_in => counter_time[10].CLK
clk_in => counter_time[11].CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
clk_in => counter[11].CLK
clk_in => state~5.DATAIN
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => clk_out~reg0.ENA
rst => speedCache[0].ENA
rst => speedCache[1].ENA
rst => counter_time[0].ENA
rst => counter_time[1].ENA
rst => counter_time[2].ENA
rst => counter_time[3].ENA
rst => counter_time[4].ENA
rst => counter_time[5].ENA
rst => counter_time[6].ENA
rst => counter_time[7].ENA
rst => counter_time[8].ENA
rst => counter_time[9].ENA
rst => counter_time[10].ENA
rst => counter_time[11].ENA
rst => counter[0].ENA
rst => counter[1].ENA
rst => counter[2].ENA
rst => counter[3].ENA
rst => counter[4].ENA
rst => counter[5].ENA
rst => counter[6].ENA
rst => counter[7].ENA
rst => counter[8].ENA
rst => counter[9].ENA
rst => counter[10].ENA
rst => counter[11].ENA
pulse => speedCache.OUTPUTSELECT
pulse => speedCache.OUTPUTSELECT
pulse => state.OUTPUTSELECT
pulse => state.OUTPUTSELECT
pulse => state.OUTPUTSELECT
pulse => state.OUTPUTSELECT
pulse => clk_out.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
pulse => counter.OUTPUTSELECT
speed[0] => speedCache.DATAB
speed[1] => speedCache.DATAB
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART|control_uart:control_uart
clk => dataCache[4].CLK
clk => dataCache[5].CLK
clk => state~5.DATAIN
dataReady => dataCache.OUTPUTSELECT
dataReady => dataCache.OUTPUTSELECT
dataReady => state.OUTPUTSELECT
dataReady => state.OUTPUTSELECT
dataReady => state.OUTPUTSELECT
dataReady => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => dataCache[5].ENA
rst => dataCache[4].ENA
dataIn[0] => ~NO_FANOUT~
dataIn[1] => ~NO_FANOUT~
dataIn[2] => ~NO_FANOUT~
dataIn[3] => ~NO_FANOUT~
dataIn[4] => dataCache.DATAB
dataIn[5] => dataCache.DATAB
dataIn[6] => ~NO_FANOUT~
dataIn[7] => ~NO_FANOUT~
dataOut[0] <= <GND>
dataOut[1] <= <GND>
dataOut[2] <= <GND>
dataOut[3] <= <GND>
dataOut[4] <= <GND>
dataOut[5] <= <GND>
dataOut[6] <= <GND>
dataOut[7] <= <GND>


|UART|uart_rx:uart_rx
rx => dataA.DATAB
rx => dataA.DATAB
rx => dataA.DATAB
rx => dataA.DATAB
rx => dataA.DATAB
rx => dataA.DATAB
rx => dataA.DATAB
rx => dataA.DATAB
rx => Selector1.IN2
rx => counter.OUTPUTSELECT
rx => counter.OUTPUTSELECT
rx => counter.OUTPUTSELECT
rx => counter.OUTPUTSELECT
rx => Selector2.IN1
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => state.OUTPUTSELECT
rst => ready.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => data.OUTPUTSELECT
rst => dataA[1].ENA
rst => dataA[0].ENA
rst => dataA[2].ENA
rst => dataA[3].ENA
rst => dataA[4].ENA
rst => dataA[5].ENA
rst => dataA[6].ENA
rst => dataA[7].ENA
rst => counter[0].ENA
rst => counter[1].ENA
rst => counter[2].ENA
rst => counter[3].ENA
clk => dataA[0].CLK
clk => dataA[1].CLK
clk => dataA[2].CLK
clk => dataA[3].CLK
clk => dataA[4].CLK
clk => dataA[5].CLK
clk => dataA[6].CLK
clk => dataA[7].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => data[0]~reg0.CLK
clk => data[1]~reg0.CLK
clk => data[2]~reg0.CLK
clk => data[3]~reg0.CLK
clk => data[4]~reg0.CLK
clk => data[5]~reg0.CLK
clk => data[6]~reg0.CLK
clk => data[7]~reg0.CLK
clk => ready~reg0.CLK
clk => state~1.DATAIN
data[0] <= data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[1] <= data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[2] <= data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[3] <= data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[4] <= data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[5] <= data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[6] <= data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
data[7] <= data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
ready <= ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


