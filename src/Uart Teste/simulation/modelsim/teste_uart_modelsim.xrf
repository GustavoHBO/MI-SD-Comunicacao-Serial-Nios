vendor_name = ModelSim
source_file = 1, /home/gaut/Documents/Remote Repository/MI-SD-Comunicacao-Serial-Nios/src/modules/LCD1602.v
source_file = 1, /home/gaut/Documents/Remote Repository/MI-SD-Comunicacao-Serial-Nios/src/modules/control_uart.v
source_file = 1, /home/gaut/Documents/Remote Repository/MI-SD-Comunicacao-Serial-Nios/src/modules/clk_divider.v
source_file = 1, /home/gaut/Documents/Remote Repository/MI-SD-Comunicacao-Serial-Nios/src/modules/UART.v
source_file = 1, /home/gaut/Documents/Remote Repository/MI-SD-Comunicacao-Serial-Nios/src/modules/uart_rx.v
source_file = 1, /home/gaut/Documents/Remote Repository/MI-SD-Comunicacao-Serial-Nios/src/modules/uart_tx.v
source_file = 1, /home/gaut/Documents/Remote Repository/MI-SD-Comunicacao-Serial-Nios/src/Uart Teste/db/teste_uart.cbx.xml
design_name = UART
instance = comp, \tx~output , tx~output, UART, 1
instance = comp, \led[0]~output , led[0]~output, UART, 1
instance = comp, \led[1]~output , led[1]~output, UART, 1
instance = comp, \led[2]~output , led[2]~output, UART, 1
instance = comp, \led[3]~output , led[3]~output, UART, 1
instance = comp, \data_packet[0]~output , data_packet[0]~output, UART, 1
instance = comp, \data_packet[1]~output , data_packet[1]~output, UART, 1
instance = comp, \data_packet[2]~output , data_packet[2]~output, UART, 1
instance = comp, \data_packet[3]~output , data_packet[3]~output, UART, 1
instance = comp, \data_packet[4]~output , data_packet[4]~output, UART, 1
instance = comp, \data_packet[5]~output , data_packet[5]~output, UART, 1
instance = comp, \data_packet[6]~output , data_packet[6]~output, UART, 1
instance = comp, \data_packet[7]~output , data_packet[7]~output, UART, 1
instance = comp, \data_packet[8]~output , data_packet[8]~output, UART, 1
instance = comp, \data_packet[9]~output , data_packet[9]~output, UART, 1
instance = comp, \data_packet[10]~output , data_packet[10]~output, UART, 1
instance = comp, \data_packet[11]~output , data_packet[11]~output, UART, 1
instance = comp, \data_packet[12]~output , data_packet[12]~output, UART, 1
instance = comp, \data_packet[13]~output , data_packet[13]~output, UART, 1
instance = comp, \data_packet[14]~output , data_packet[14]~output, UART, 1
instance = comp, \data_packet[15]~output , data_packet[15]~output, UART, 1
instance = comp, \data_packet[16]~output , data_packet[16]~output, UART, 1
instance = comp, \data_packet[17]~output , data_packet[17]~output, UART, 1
instance = comp, \data_packet[18]~output , data_packet[18]~output, UART, 1
instance = comp, \data_packet[19]~output , data_packet[19]~output, UART, 1
instance = comp, \data_packet[20]~output , data_packet[20]~output, UART, 1
instance = comp, \data_packet[21]~output , data_packet[21]~output, UART, 1
instance = comp, \data_packet[22]~output , data_packet[22]~output, UART, 1
instance = comp, \data_packet[23]~output , data_packet[23]~output, UART, 1
instance = comp, \data_packet[24]~output , data_packet[24]~output, UART, 1
instance = comp, \data_packet[25]~output , data_packet[25]~output, UART, 1
instance = comp, \data_packet[26]~output , data_packet[26]~output, UART, 1
instance = comp, \data_packet[27]~output , data_packet[27]~output, UART, 1
instance = comp, \data_packet[28]~output , data_packet[28]~output, UART, 1
instance = comp, \data_packet[29]~output , data_packet[29]~output, UART, 1
instance = comp, \data_packet[30]~output , data_packet[30]~output, UART, 1
instance = comp, \data_packet[31]~output , data_packet[31]~output, UART, 1
instance = comp, \rs~output , rs~output, UART, 1
instance = comp, \rw~output , rw~output, UART, 1
instance = comp, \en~output , en~output, UART, 1
instance = comp, \dat[0]~output , dat[0]~output, UART, 1
instance = comp, \dat[1]~output , dat[1]~output, UART, 1
instance = comp, \dat[2]~output , dat[2]~output, UART, 1
instance = comp, \dat[3]~output , dat[3]~output, UART, 1
instance = comp, \dat[4]~output , dat[4]~output, UART, 1
instance = comp, \dat[5]~output , dat[5]~output, UART, 1
instance = comp, \dat[6]~output , dat[6]~output, UART, 1
instance = comp, \dat[7]~output , dat[7]~output, UART, 1
instance = comp, \LCD_N~output , LCD_N~output, UART, 1
instance = comp, \LCD_P~output , LCD_P~output, UART, 1
instance = comp, \clk~input , clk~input, UART, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, UART, 1
instance = comp, \reset~input , reset~input, UART, 1
instance = comp, \clk_divider|state.idle~feeder , clk_divider|state.idle~feeder, UART, 1
instance = comp, \clk_divider|state.idle , clk_divider|state.idle, UART, 1
instance = comp, \clk_divider|counter[0]~12 , clk_divider|counter[0]~12, UART, 1
instance = comp, \~GND , ~GND, UART, 1
instance = comp, \clk_divider|counter[0] , clk_divider|counter[0], UART, 1
instance = comp, \clk_divider|counter[1]~14 , clk_divider|counter[1]~14, UART, 1
instance = comp, \clk_divider|counter[1] , clk_divider|counter[1], UART, 1
instance = comp, \clk_divider|counter[2]~16 , clk_divider|counter[2]~16, UART, 1
instance = comp, \clk_divider|counter[2] , clk_divider|counter[2], UART, 1
instance = comp, \clk_divider|counter[3]~18 , clk_divider|counter[3]~18, UART, 1
instance = comp, \clk_divider|counter[3] , clk_divider|counter[3], UART, 1
instance = comp, \clk_divider|counter[4]~20 , clk_divider|counter[4]~20, UART, 1
instance = comp, \clk_divider|counter[4] , clk_divider|counter[4], UART, 1
instance = comp, \clk_divider|counter[5]~22 , clk_divider|counter[5]~22, UART, 1
instance = comp, \clk_divider|counter[5] , clk_divider|counter[5], UART, 1
instance = comp, \clk_divider|counter[6]~24 , clk_divider|counter[6]~24, UART, 1
instance = comp, \clk_divider|counter[6] , clk_divider|counter[6], UART, 1
instance = comp, \clk_divider|counter[7]~26 , clk_divider|counter[7]~26, UART, 1
instance = comp, \clk_divider|counter[7] , clk_divider|counter[7], UART, 1
instance = comp, \clk_divider|counter[8]~28 , clk_divider|counter[8]~28, UART, 1
instance = comp, \clk_divider|counter[8] , clk_divider|counter[8], UART, 1
instance = comp, \clk_divider|counter[9]~30 , clk_divider|counter[9]~30, UART, 1
instance = comp, \clk_divider|counter[9] , clk_divider|counter[9], UART, 1
instance = comp, \clk_divider|counter[10]~32 , clk_divider|counter[10]~32, UART, 1
instance = comp, \clk_divider|counter[10] , clk_divider|counter[10], UART, 1
instance = comp, \clk_divider|counter[11]~34 , clk_divider|counter[11]~34, UART, 1
instance = comp, \clk_divider|counter[11] , clk_divider|counter[11], UART, 1
instance = comp, \clk_divider|LessThan0~1 , clk_divider|LessThan0~1, UART, 1
instance = comp, \clk_divider|LessThan0~0 , clk_divider|LessThan0~0, UART, 1
instance = comp, \clk_divider|LessThan0~2 , clk_divider|LessThan0~2, UART, 1
instance = comp, \clk_divider|LessThan0~3 , clk_divider|LessThan0~3, UART, 1
instance = comp, \clk_divider|clk_out~0 , clk_divider|clk_out~0, UART, 1
instance = comp, \clk_divider|clk_out~feeder , clk_divider|clk_out~feeder, UART, 1
instance = comp, \clk_divider|clk_out , clk_divider|clk_out, UART, 1
instance = comp, \clk_divider|clk_out~clkctrl , clk_divider|clk_out~clkctrl, UART, 1
instance = comp, \rx~input , rx~input, UART, 1
instance = comp, \uart_rx|state~10 , uart_rx|state~10, UART, 1
instance = comp, \uart_rx|state.idle , uart_rx|state.idle, UART, 1
instance = comp, \uart_rx|Selector7~2 , uart_rx|Selector7~2, UART, 1
instance = comp, \uart_rx|Selector7~3 , uart_rx|Selector7~3, UART, 1
instance = comp, \uart_rx|state.receving , uart_rx|state.receving, UART, 1
instance = comp, \uart_rx|counter[3]~0 , uart_rx|counter[3]~0, UART, 1
instance = comp, \uart_rx|counter[0]~2 , uart_rx|counter[0]~2, UART, 1
instance = comp, \uart_rx|counter[0] , uart_rx|counter[0], UART, 1
instance = comp, \uart_rx|counter[1]~3 , uart_rx|counter[1]~3, UART, 1
instance = comp, \uart_rx|counter[1] , uart_rx|counter[1], UART, 1
instance = comp, \uart_rx|Add0~0 , uart_rx|Add0~0, UART, 1
instance = comp, \uart_rx|counter[2]~4 , uart_rx|counter[2]~4, UART, 1
instance = comp, \uart_rx|counter[2] , uart_rx|counter[2], UART, 1
instance = comp, \uart_rx|Add0~1 , uart_rx|Add0~1, UART, 1
instance = comp, \uart_rx|counter[3]~1 , uart_rx|counter[3]~1, UART, 1
instance = comp, \uart_rx|counter[3] , uart_rx|counter[3], UART, 1
instance = comp, \uart_rx|state~8 , uart_rx|state~8, UART, 1
instance = comp, \uart_rx|state~9 , uart_rx|state~9, UART, 1
instance = comp, \uart_rx|state.done , uart_rx|state.done, UART, 1
instance = comp, \uart_rx|Selector4~0 , uart_rx|Selector4~0, UART, 1
instance = comp, \uart_rx|ready , uart_rx|ready, UART, 1
instance = comp, \uart_tx|counter[0]~3 , uart_tx|counter[0]~3, UART, 1
instance = comp, \uart_tx|counter[0] , uart_tx|counter[0], UART, 1
instance = comp, \uart_tx|counter[1]~0 , uart_tx|counter[1]~0, UART, 1
instance = comp, \uart_tx|counter[1]~1 , uart_tx|counter[1]~1, UART, 1
instance = comp, \uart_tx|counter[1] , uart_tx|counter[1], UART, 1
instance = comp, \uart_tx|Add0~0 , uart_tx|Add0~0, UART, 1
instance = comp, \uart_tx|counter[2]~4 , uart_tx|counter[2]~4, UART, 1
instance = comp, \uart_tx|counter[2] , uart_tx|counter[2], UART, 1
instance = comp, \uart_tx|Add0~1 , uart_tx|Add0~1, UART, 1
instance = comp, \uart_tx|counter[3]~5 , uart_tx|counter[3]~5, UART, 1
instance = comp, \uart_tx|counter[3] , uart_tx|counter[3], UART, 1
instance = comp, \uart_tx|state~5 , uart_tx|state~5, UART, 1
instance = comp, \uart_tx|counter[1]~2 , uart_tx|counter[1]~2, UART, 1
instance = comp, \uart_tx|counter[1]~2_wirecell , uart_tx|counter[1]~2_wirecell, UART, 1
instance = comp, \uart_tx|state.sending , uart_tx|state.sending, UART, 1
instance = comp, \uart_tx|state~7 , uart_tx|state~7, UART, 1
instance = comp, \uart_tx|state.done , uart_tx|state.done, UART, 1
instance = comp, \uart_tx|state~6 , uart_tx|state~6, UART, 1
instance = comp, \uart_tx|state.idle , uart_tx|state.idle, UART, 1
instance = comp, \uart_tx|dataA[7]~0 , uart_tx|dataA[7]~0, UART, 1
instance = comp, \uart_rx|Decoder0~5 , uart_rx|Decoder0~5, UART, 1
instance = comp, \uart_rx|dataA[7]~7 , uart_rx|dataA[7]~7, UART, 1
instance = comp, \uart_rx|dataA[7] , uart_rx|dataA[7], UART, 1
instance = comp, \uart_rx|data~8 , uart_rx|data~8, UART, 1
instance = comp, \uart_rx|data[0]~1 , uart_rx|data[0]~1, UART, 1
instance = comp, \uart_rx|data[7] , uart_rx|data[7], UART, 1
instance = comp, \uart_tx|dataA[7]~feeder , uart_tx|dataA[7]~feeder, UART, 1
instance = comp, \uart_tx|dataA[7]~1 , uart_tx|dataA[7]~1, UART, 1
instance = comp, \uart_tx|dataA[7] , uart_tx|dataA[7], UART, 1
instance = comp, \uart_rx|Decoder0~0 , uart_rx|Decoder0~0, UART, 1
instance = comp, \uart_rx|Decoder0~3 , uart_rx|Decoder0~3, UART, 1
instance = comp, \uart_rx|dataA[6]~4 , uart_rx|dataA[6]~4, UART, 1
instance = comp, \uart_rx|dataA[6] , uart_rx|dataA[6], UART, 1
instance = comp, \uart_rx|data~5 , uart_rx|data~5, UART, 1
instance = comp, \uart_rx|data[6] , uart_rx|data[6], UART, 1
instance = comp, \uart_tx|dataA[6] , uart_tx|dataA[6], UART, 1
instance = comp, \uart_rx|Decoder0~6 , uart_rx|Decoder0~6, UART, 1
instance = comp, \uart_rx|dataA[5]~5 , uart_rx|dataA[5]~5, UART, 1
instance = comp, \uart_rx|dataA[5] , uart_rx|dataA[5], UART, 1
instance = comp, \uart_rx|data~6 , uart_rx|data~6, UART, 1
instance = comp, \uart_rx|data[5] , uart_rx|data[5], UART, 1
instance = comp, \uart_tx|dataA[5]~feeder , uart_tx|dataA[5]~feeder, UART, 1
instance = comp, \uart_tx|dataA[5] , uart_tx|dataA[5], UART, 1
instance = comp, \uart_rx|Decoder0~7 , uart_rx|Decoder0~7, UART, 1
instance = comp, \uart_rx|dataA[4]~6 , uart_rx|dataA[4]~6, UART, 1
instance = comp, \uart_rx|dataA[4] , uart_rx|dataA[4], UART, 1
instance = comp, \uart_rx|data~7 , uart_rx|data~7, UART, 1
instance = comp, \uart_rx|data[4] , uart_rx|data[4], UART, 1
instance = comp, \uart_tx|dataA[4] , uart_tx|dataA[4], UART, 1
instance = comp, \uart_tx|Mux0~2 , uart_tx|Mux0~2, UART, 1
instance = comp, \uart_tx|Mux0~3 , uart_tx|Mux0~3, UART, 1
instance = comp, \uart_rx|dataA[2]~2 , uart_rx|dataA[2]~2, UART, 1
instance = comp, \uart_rx|dataA[2] , uart_rx|dataA[2], UART, 1
instance = comp, \uart_rx|data~3 , uart_rx|data~3, UART, 1
instance = comp, \uart_rx|data[2] , uart_rx|data[2], UART, 1
instance = comp, \uart_tx|dataA[2]~feeder , uart_tx|dataA[2]~feeder, UART, 1
instance = comp, \uart_tx|dataA[2] , uart_tx|dataA[2], UART, 1
instance = comp, \uart_rx|Decoder0~4 , uart_rx|Decoder0~4, UART, 1
instance = comp, \uart_rx|dataA[3]~3 , uart_rx|dataA[3]~3, UART, 1
instance = comp, \uart_rx|dataA[3] , uart_rx|dataA[3], UART, 1
instance = comp, \uart_rx|data~4 , uart_rx|data~4, UART, 1
instance = comp, \uart_rx|data[3] , uart_rx|data[3], UART, 1
instance = comp, \uart_tx|dataA[3] , uart_tx|dataA[3], UART, 1
instance = comp, \uart_rx|Decoder0~2 , uart_rx|Decoder0~2, UART, 1
instance = comp, \uart_rx|dataA[1]~1 , uart_rx|dataA[1]~1, UART, 1
instance = comp, \uart_rx|dataA[1] , uart_rx|dataA[1], UART, 1
instance = comp, \uart_rx|data~2 , uart_rx|data~2, UART, 1
instance = comp, \uart_rx|data[1] , uart_rx|data[1], UART, 1
instance = comp, \uart_tx|dataA[1]~feeder , uart_tx|dataA[1]~feeder, UART, 1
instance = comp, \uart_tx|dataA[1] , uart_tx|dataA[1], UART, 1
instance = comp, \uart_rx|Decoder0~1 , uart_rx|Decoder0~1, UART, 1
instance = comp, \uart_rx|dataA[0]~0 , uart_rx|dataA[0]~0, UART, 1
instance = comp, \uart_rx|dataA[0] , uart_rx|dataA[0], UART, 1
instance = comp, \uart_rx|data~0 , uart_rx|data~0, UART, 1
instance = comp, \uart_rx|data[0] , uart_rx|data[0], UART, 1
instance = comp, \uart_tx|dataA[0] , uart_tx|dataA[0], UART, 1
instance = comp, \uart_tx|Mux0~0 , uart_tx|Mux0~0, UART, 1
instance = comp, \uart_tx|Mux0~1 , uart_tx|Mux0~1, UART, 1
instance = comp, \uart_tx|Selector0~0 , uart_tx|Selector0~0, UART, 1
instance = comp, \uart_tx|Selector0~1 , uart_tx|Selector0~1, UART, 1
instance = comp, \uart_tx|tx~feeder , uart_tx|tx~feeder, UART, 1
instance = comp, \uart_tx|tx , uart_tx|tx, UART, 1
instance = comp, \LCD1602|counter[15] , LCD1602|counter[15], UART, 1
instance = comp, \LCD1602|Add0~0 , LCD1602|Add0~0, UART, 1
instance = comp, \LCD1602|counter[0] , LCD1602|counter[0], UART, 1
instance = comp, \LCD1602|Add0~2 , LCD1602|Add0~2, UART, 1
instance = comp, \LCD1602|counter[1] , LCD1602|counter[1], UART, 1
instance = comp, \LCD1602|Add0~4 , LCD1602|Add0~4, UART, 1
instance = comp, \LCD1602|counter[2] , LCD1602|counter[2], UART, 1
instance = comp, \LCD1602|Add0~6 , LCD1602|Add0~6, UART, 1
instance = comp, \LCD1602|counter[3] , LCD1602|counter[3], UART, 1
instance = comp, \LCD1602|Add0~8 , LCD1602|Add0~8, UART, 1
instance = comp, \LCD1602|counter[4] , LCD1602|counter[4], UART, 1
instance = comp, \LCD1602|Add0~10 , LCD1602|Add0~10, UART, 1
instance = comp, \LCD1602|counter[5] , LCD1602|counter[5], UART, 1
instance = comp, \LCD1602|Add0~12 , LCD1602|Add0~12, UART, 1
instance = comp, \LCD1602|counter[6] , LCD1602|counter[6], UART, 1
instance = comp, \LCD1602|Add0~14 , LCD1602|Add0~14, UART, 1
instance = comp, \LCD1602|counter[7] , LCD1602|counter[7], UART, 1
instance = comp, \LCD1602|Add0~16 , LCD1602|Add0~16, UART, 1
instance = comp, \LCD1602|counter[8] , LCD1602|counter[8], UART, 1
instance = comp, \LCD1602|Add0~18 , LCD1602|Add0~18, UART, 1
instance = comp, \LCD1602|counter[9] , LCD1602|counter[9], UART, 1
instance = comp, \LCD1602|Add0~20 , LCD1602|Add0~20, UART, 1
instance = comp, \LCD1602|counter[10] , LCD1602|counter[10], UART, 1
instance = comp, \LCD1602|Add0~22 , LCD1602|Add0~22, UART, 1
instance = comp, \LCD1602|counter[11] , LCD1602|counter[11], UART, 1
instance = comp, \LCD1602|Add0~24 , LCD1602|Add0~24, UART, 1
instance = comp, \LCD1602|counter[12] , LCD1602|counter[12], UART, 1
instance = comp, \LCD1602|Add0~26 , LCD1602|Add0~26, UART, 1
instance = comp, \LCD1602|counter[13] , LCD1602|counter[13], UART, 1
instance = comp, \LCD1602|Add0~28 , LCD1602|Add0~28, UART, 1
instance = comp, \LCD1602|counter[14] , LCD1602|counter[14], UART, 1
instance = comp, \LCD1602|Add0~30 , LCD1602|Add0~30, UART, 1
instance = comp, \LCD1602|Equal0~0 , LCD1602|Equal0~0, UART, 1
instance = comp, \LCD1602|clkr~0 , LCD1602|clkr~0, UART, 1
instance = comp, \LCD1602|clkr~1 , LCD1602|clkr~1, UART, 1
instance = comp, \LCD1602|clkr~2 , LCD1602|clkr~2, UART, 1
instance = comp, \LCD1602|clkr~3 , LCD1602|clkr~3, UART, 1
instance = comp, \LCD1602|clkr~4 , LCD1602|clkr~4, UART, 1
instance = comp, \LCD1602|clkr~feeder , LCD1602|clkr~feeder, UART, 1
instance = comp, \LCD1602|clkr , LCD1602|clkr, UART, 1
instance = comp, \LCD1602|clkr~clkctrl , LCD1602|clkr~clkctrl, UART, 1
instance = comp, \LCD1602|next.set1~feeder , LCD1602|next.set1~feeder, UART, 1
instance = comp, \LCD1602|next.set1 , LCD1602|next.set1, UART, 1
instance = comp, \LCD1602|next.set2~0 , LCD1602|next.set2~0, UART, 1
instance = comp, \LCD1602|next.set2 , LCD1602|next.set2, UART, 1
instance = comp, \LCD1602|next.set3~feeder , LCD1602|next.set3~feeder, UART, 1
instance = comp, \LCD1602|next.set3 , LCD1602|next.set3, UART, 1
instance = comp, \LCD1602|next.dat0~feeder , LCD1602|next.dat0~feeder, UART, 1
instance = comp, \LCD1602|next.dat0 , LCD1602|next.dat0, UART, 1
instance = comp, \LCD1602|next.dat1 , LCD1602|next.dat1, UART, 1
instance = comp, \LCD1602|next.dat2 , LCD1602|next.dat2, UART, 1
instance = comp, \LCD1602|next.dat3~feeder , LCD1602|next.dat3~feeder, UART, 1
instance = comp, \LCD1602|next.dat3 , LCD1602|next.dat3, UART, 1
instance = comp, \LCD1602|next.dat4 , LCD1602|next.dat4, UART, 1
instance = comp, \LCD1602|next.dat5 , LCD1602|next.dat5, UART, 1
instance = comp, \LCD1602|next.dat6~feeder , LCD1602|next.dat6~feeder, UART, 1
instance = comp, \LCD1602|next.dat6 , LCD1602|next.dat6, UART, 1
instance = comp, \LCD1602|next.dat7~feeder , LCD1602|next.dat7~feeder, UART, 1
instance = comp, \LCD1602|next.dat7 , LCD1602|next.dat7, UART, 1
instance = comp, \LCD1602|next.dat8~feeder , LCD1602|next.dat8~feeder, UART, 1
instance = comp, \LCD1602|next.dat8 , LCD1602|next.dat8, UART, 1
instance = comp, \LCD1602|next.dat9~feeder , LCD1602|next.dat9~feeder, UART, 1
instance = comp, \LCD1602|next.dat9 , LCD1602|next.dat9, UART, 1
instance = comp, \LCD1602|next.dat10~feeder , LCD1602|next.dat10~feeder, UART, 1
instance = comp, \LCD1602|next.dat10 , LCD1602|next.dat10, UART, 1
instance = comp, \LCD1602|next~22 , LCD1602|next~22, UART, 1
instance = comp, \LCD1602|next.dat11 , LCD1602|next.dat11, UART, 1
instance = comp, \LCD1602|next.nul~feeder , LCD1602|next.nul~feeder, UART, 1
instance = comp, \LCD1602|next.nul , LCD1602|next.nul, UART, 1
instance = comp, \LCD1602|WideOr0~0 , LCD1602|WideOr0~0, UART, 1
instance = comp, \LCD1602|rs , LCD1602|rs, UART, 1
instance = comp, \LCD1602|WideOr14~1 , LCD1602|WideOr14~1, UART, 1
instance = comp, \LCD1602|WideOr14~0 , LCD1602|WideOr14~0, UART, 1
instance = comp, \LCD1602|WideOr14 , LCD1602|WideOr14, UART, 1
instance = comp, \LCD1602|dat[0] , LCD1602|dat[0], UART, 1
instance = comp, \LCD1602|WideOr9~0 , LCD1602|WideOr9~0, UART, 1
instance = comp, \LCD1602|WideOr12 , LCD1602|WideOr12, UART, 1
instance = comp, \LCD1602|dat[1] , LCD1602|dat[1], UART, 1
instance = comp, \LCD1602|WideOr9~1 , LCD1602|WideOr9~1, UART, 1
instance = comp, \LCD1602|WideOr9 , LCD1602|WideOr9, UART, 1
instance = comp, \LCD1602|dat[2] , LCD1602|dat[2], UART, 1
instance = comp, \LCD1602|WideOr7~0 , LCD1602|WideOr7~0, UART, 1
instance = comp, \LCD1602|dat[3] , LCD1602|dat[3], UART, 1
instance = comp, \LCD1602|WideOr6~0 , LCD1602|WideOr6~0, UART, 1
instance = comp, \LCD1602|dat[4] , LCD1602|dat[4], UART, 1
instance = comp, \LCD1602|WideOr4~0 , LCD1602|WideOr4~0, UART, 1
instance = comp, \LCD1602|dat[5] , LCD1602|dat[5], UART, 1
instance = comp, \LCD1602|WideOr2~0 , LCD1602|WideOr2~0, UART, 1
instance = comp, \LCD1602|dat[6] , LCD1602|dat[6], UART, 1
instance = comp, \button~input , button~input, UART, 1
